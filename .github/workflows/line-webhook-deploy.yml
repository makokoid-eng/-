name: Deploy LINE webhook to Cloud Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Auth method switched to JSON key for personal project (no organization)
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 470.0.0'
          export_default_credentials: true

      - name: Deploy Cloud Functions v2 (line-webhook)
        working-directory: cloud/functions/line-webhook
        env:
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
          LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_LOCATION: ${{ secrets.GCP_LOCATION }}
          TASKS_QUEUE_ID: ${{ secrets.TASKS_QUEUE_ID }}
          PUBLIC_WORKER_URL: ${{ secrets.PUBLIC_WORKER_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          gcloud functions deploy line-webhook \
            --gen2 \
            --region="${{ secrets.GCP_REGION }}" \
            --project="${{ secrets.GCP_PROJECT_ID }}" \
            --runtime=nodejs20 \
            --entry-point=app \
            --source=. \
            --trigger-http \
            --allow-unauthenticated \
            --set-env-vars="LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN},LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET},GCP_PROJECT_ID=${GCP_PROJECT_ID},GCP_LOCATION=${GCP_LOCATION},TASKS_QUEUE_ID=${TASKS_QUEUE_ID},PUBLIC_WORKER_URL=${PUBLIC_WORKER_URL},OPENAI_API_KEY=${OPENAI_API_KEY}"
